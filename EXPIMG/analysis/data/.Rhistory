if (participant == -1){
this_data <- data[(data$condition == condition)&
(data$recog_band == recognition),]$response_error
} else {
this_data <- data[(data$participant == participant)&
(data$condition == condition)&
(data$recog_band == recognition),]$response_error
}
this_data <- this_data + pi # Shift by pi to be between 0 and 2pi
# Get Model
if (participant == -1){
this_prec <- fits[(fits$condition == condition)&
(fits$recognition == recognition),]$prec
this_lmbda <- fits[(fits$condition == condition)&
(fits$recognition == recognition),]$lmbda
} else {
this_prec <- fits[(fits$participant == participant)&
(fits$condition == condition)&(
fits$recognition == recognition),]$prec
this_lmbda <- fits[(fits$participant == participant)&
(fits$condition == condition)&
(fits$recognition == recognition),]$lmbda
}
this_model <- plot_fit(this_prec,this_lmbda)
ggplot() +
geom_histogram(aes(x=this_data, y=..density..), alpha=0.6,
position="identity", lwd=0.2) +
geom_density(aes(x=this_model, colour='red'), alpha=0.6,
position="identity", lwd=1) +
labs(title= recognition,
x ="Response Outcome", y = "Density", colour = "model")
}
plot_model(-1,1,"Low")
View(fits)
plot_model(-1,1,"High")
# Load in data
setwd("~/GitHub/sourcemem/EXPIMG/analysis/data")
data <- read.csv('dataFiltered3.csv')
data <- data[,-1]
data <- data[data$participant = validps]
data <- data[data$participant == validps,]
data <- data[data$participant == valid_ps,]
valid_ps <- c(3,4,6,7,9,12,13,15,17)
data <- data[data$participant == valid_ps,]
View(data)
setwd("~/GitHub/sourcemem/EXPIMG/analysis/data")
data <- read.csv('dataFiltered3.csv')
data <- data[,-1]
data <- data[data$participant %in% valid_ps,]
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
fits <- data.frame(
participant = integer(),
condition = integer(),
recognition = character(),
prec = numeric(),
lmbda = numeric(),
stringsAsFactors = FALSE
)
conditions <- unique(data$condition)
recog_bands <- unique(data$recog_band)
for (j in 1:length(conditions)){
for (k in 1:length(recog_bands)){
this_participant <- fit_mix(-1, j, recog_bands[k])
this_fit <- c(-1,j,recog_bands[k],this_participant[1],this_participant[2])
fits[nrow(fits)+1, ] <- this_fit
}
}
fits$prec <- as.numeric(fits$prec)
fits$lmbda <- as.numeric(fits$lmbda)
View(fits)
plot_model(-1,1,"High")
plot_model(-1,1,"Low")
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
fits <- data.frame(
participant = integer(),
condition = integer(),
recognition = character(),
prec = numeric(),
lmbda = numeric(),
stringsAsFactors = FALSE
)
conditions <- unique(data$condition)
recog_bands <- unique(data$recog_band)
for (j in 1:length(conditions)){
for (k in 1:length(recog_bands)){
this_participant <- fit_mix(-1, j, recog_bands[k])
this_fit <- c(-1,j,recog_bands[k],this_participant[1],this_participant[2])
fits[nrow(fits)+1, ] <- this_fit
}
}
fits$prec <- as.numeric(fits$prec)
fits$lmbda <- as.numeric(fits$lmbda)
View(fits)
View(data)
setwd("~/GitHub/sourcemem/EXPIMG/analysis/data")
data <- read.csv('dataFiltered3.csv')
data <- data[,-1]
# valid_ps <- c(3,4,6,7,9,12,13,15,17)
# data <- data[data$participant %in% valid_ps,]
# Define recognition bands in data
# data$recog_band <- ifelse(data$recog_rating >= 0 & data$recog_rating <= 3, 'Unrecognized',
#                           ifelse(data$recog_rating >=4 & data$recog_rating <=5, 'Low',
#                                  ifelse(data$recog_rating ==6, 'High','N/A')
#                           )
# )
data$recog_band <- ifelse(data$recog_rating >= 0 & data$recog_rating <= 3, 'Unrecognized',
ifelse(data$recog_rating >=4 & data$recog_rating <=6, 'Low',
ifelse(data$recog_rating ==6, 'High','N/A')
)
)
View(data)
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
fits <- data.frame(
participant = integer(),
condition = integer(),
recognition = character(),
prec = numeric(),
lmbda = numeric(),
stringsAsFactors = FALSE
)
participants <- unique(data$participant)
conditions <- unique(data$condition)
recog_bands <- unique(data$recog_band)
for (i in 1:length(participants)){
for (j in 1:length(conditions)){
for (k in 1:length(recog_bands)){
this_participant <- fit_mix(i, j, recog_bands[k])
this_fit <- c(i,j,recog_bands[k],this_participant[1],this_participant[2])
fits[nrow(fits)+1, ] <- this_fit
}
}
}
fits$prec <- as.numeric(fits$prec)
fits$lmbda <- as.numeric(fits$lmbda)
View(fits)
plot_model(1,1,"Low")
unrecog <- matrix(nrow = 19, ncol = 4)
unrecog[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$lmbda
unrecog[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$lmbda
low <- matrix(nrow = 19, ncol = 4)
low[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$prec
low[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$lmbda
low[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$prec
low[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$lmbda
high <- matrix(nrow = 19, ncol = 4)
high[,1] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$prec
high[,2] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$lmbda
high[,3] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$prec
high[,4] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$lmbda
unrecog <- matrix(nrow = 19, ncol = 4)
unrecog[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$lmbda
unrecog[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$lmbda
low <- matrix(nrow = 19, ncol = 4)
low[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$prec
low[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$lmbda
low[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$prec
low[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$lmbda
high <- matrix(nrow = 19, ncol = 4)
high[,1] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$prec
high[,2] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$lmbda
high[,3] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$prec
high[,4] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$lmbda
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
fits <- data.frame(
participant = integer(),
condition = integer(),
recognition = character(),
prec = numeric(),
lmbda = numeric(),
stringsAsFactors = FALSE
)
participants <- unique(data$participant)
conditions <- unique(data$condition)
recog_bands <- unique(data$recog_band)
for (i in 1:length(participants)){
for (j in 1:length(conditions)){
for (k in 1:length(recog_bands)){
this_participant <- fit_mix(i, j, recog_bands[k])
this_fit <- c(i,j,recog_bands[k],this_participant[1],this_participant[2])
fits[nrow(fits)+1, ] <- this_fit
}
}
}
fits$prec <- as.numeric(fits$prec)
fits$lmbda <- as.numeric(fits$lmbda)
View(fits)
View(fits)
unrecog <- matrix(nrow = 19, ncol = 4)
unrecog[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$lmbda
unrecog[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$lmbda
low <- matrix(nrow = 19, ncol = 4)
low[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$prec
low[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$lmbda
low[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$prec
low[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$lmbda
high <- matrix(nrow = 19, ncol = 4)
high[,1] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$prec
high[,2] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$lmbda
high[,3] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$prec
high[,4] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$lmbda
View(high)
participants
View(fits)
View(high)
plot_model(14,1,"High")
plot_model(15,1,"High")
View(fits)
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
participants <- unique(data$participant)
participants[14]
fits <- data.frame(
participant = integer(),
condition = integer(),
recognition = character(),
prec = numeric(),
lmbda = numeric(),
stringsAsFactors = FALSE
)
participants <- unique(data$participant)
conditions <- unique(data$condition)
recog_bands <- unique(data$recog_band)
for (i in 1:length(participants)){
for (j in 1:length(conditions)){
for (k in 1:length(recog_bands)){
this_participant <- fit_mix(participants[i], j, recog_bands[k])
this_fit <- c(participants[i],j,recog_bands[k],this_participant[1],this_participant[2])
fits[nrow(fits)+1, ] <- this_fit
}
}
}
fits$prec <- as.numeric(fits$prec)
fits$lmbda <- as.numeric(fits$lmbda)
unrecog <- matrix(nrow = 19, ncol = 4)
unrecog[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Unrecognized"),]$lmbda
unrecog[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$prec
unrecog[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Unrecognized"),]$lmbda
low <- matrix(nrow = 19, ncol = 4)
low[,1] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$prec
low[,2] <- fits[(fits$condition == 1) & (fits$recognition == "Low"),]$lmbda
low[,3] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$prec
low[,4] <- fits[(fits$condition == 2) & (fits$recognition == "Low"),]$lmbda
high <- matrix(nrow = 19, ncol = 4)
high[,1] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$prec
high[,2] <- fits[(fits$condition == 1) & (fits$recognition == "High"),]$lmbda
high[,3] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$prec
high[,4] <- fits[(fits$condition == 2) & (fits$recognition == "High"),]$lmbda
View(high)
View(fits)
View(fits)
View(high)
View(low)
plot_model(9,1,"Low")
View(low)
View(high)
View(low)
View(unrecog)
plot_model(10,1,"Low")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd('C:/Users/jason/Documents/GitHub/sourcemem/EXPIMG/analysis/data/')
dataset <- data.frame()
participants = c("p1","p2","p3","p4","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p15","p16","p17","p18","p19","p20")
for (i in participants){
participant_dataset <- data.frame()
for (j in 1:4){
sessions = c("1","2","3","4")
s <- j
this_session_dataset <- read.csv(paste(i,"_",j,".csv",sep=""))
participant_dataset <- rbind(participant_dataset,this_session_dataset)
}
participant_dataset$participant <- i
dataset <- rbind(dataset,participant_dataset) #could have done this with lists, but because its all the same, we are doing it with one big dataset, added a new variable that identifies.
}
#Recoding Low/High
dataset$condition <- relevel(dataset$condition," LOW")
dataset$condition <- as.numeric(factor(dataset$condition))
#dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
dataset$response_error <- as.numeric(as.character(dataset$response_error))
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
recog <- dataset.no.na[dataset.no.na$recog_rating > 3, ]
unrecog <- dataset.no.na[dataset.no.na$recog_rating <= 3, ]
high <- dataset.no.na[dataset.no.na$recog_rating == 6, ]
allHist<- ggplot(data = dataset.no.na, aes(x = dataset.no.na$response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + theme_classic()
unrecogHist<- ggplot(data = unrecog, aes(x = unrecog$response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="Unrecognized Items", x = "Response Error (radians)", y = "Frequency") + theme_classic()
recogHist<- ggplot(data = recog, aes(x = recog$response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="Recognized Items", x = "Response Error (radians)", y = "Frequency") + theme_classic()
highHist<- ggplot(data = high, aes(x = high$response_error)) + geom_histogram(bins = 100)+ scale_y_continuous(limits=c(0, 700)) + labs(title ="Highlt Recognized Items", x = "Response Error (radians)", y = "Frequency") + theme_classic()
jumboHist <- ggplot() + geom_histogram(data = dataset.no.na, aes(x = dataset.no.na$response_error, fill="All"), bins = 50) + geom_histogram(data = recog, aes(x = recog$response_error, fill="Recognized"), bins = 50) + geom_histogram(data = unrecog, aes(x = unrecog$response_error, fill="Unrecognized"), bins = 50) + theme_classic()+ labs(x = "Response Error (radians)", y = "Frequency",fill = "Recognition Rating")
# Write CSV in R
#write.csv(dataset, file = "dataFiltered3.csv")
p10_data <- p10_data[(p10_data$recog_rating > 3),]
dataset.no.na$recog_band <- ifelse(dataset.no.na$recog_rating >= 0 & dataset.no.na$recog_rating <= 3, 'Unrecognized',
ifelse(dataset.no.na$recog_rating >=4 & dataset.no.na$recog_rating <=5, 'Low',
ifelse(dataset.no.na$recog_rating ==6, 'High','N/A')
)
)
View(dataset.na)
setwd('C:/Users/jason/Documents/GitHub/sourcemem/EXPIMG/analysis/data/')
dataset <- data.frame()
participants = c("p1","p2","p3","p4","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p15","p16","p17","p18","p19","p20")
for (i in participants){
participant_dataset <- data.frame()
for (j in 1:4){
sessions = c("1","2","3","4")
s <- j
this_session_dataset <- read.csv(paste(i,"_",j,".csv",sep=""))
participant_dataset <- rbind(participant_dataset,this_session_dataset)
}
participant_dataset$participant <- i
dataset <- rbind(dataset,participant_dataset) #could have done this with lists, but because its all the same, we are doing it with one big dataset, added a new variable that identifies.
}
#Recoding Low/High
dataset$condition <- relevel(dataset$condition," LOW")
dataset$condition <- as.numeric(factor(dataset$condition))
#dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
dataset$response_error <- as.numeric(as.character(dataset$response_error))
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
data <- dataset.no.na
View(data)
data$recog_band <- ifelse(data$recog_rating >= 0 & data$recog_rating <= 3, 'Unrecognized',
ifelse(data$recog_rating >=4 & data$recog_rating <=5, 'Low',
ifelse(data$recog_rating ==6, 'High','N/A')
)
)
View(data)
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic()
allHist
highHist<- ggplot(data = high, aes(x = high$response_error)) + geom_histogram(bins = 100)+ scale_y_continuous(limits=c(0, 700)) + labs(title ="Highlt Recognized Items", x = "Response Error (radians)", y = "Frequency") + theme_classic()
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band)
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic()
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12, color = "red", face = "bold.italic"
))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12
))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color="black", fill="#FC4E07", size=1.5, linetype="solid"
)
)
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= white
)
)
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)
)
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12, face = "bold"),
strip.background = element_rect(
color= 'white'
)
)
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)
)
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white',
axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain")
)
)
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = 2, vjust = .5, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .75, vjust = .5, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = .75, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(color = "grey20", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 12, angle = 90, hjust = .5, vjust = 1, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(title ="All Recognition Ratings", x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(size = 20, angle = 90, hjust = .5, vjust = 2, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(size = 14, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(size = 14, angle = 90, hjust = .5, vjust = 2, face = "plain"))
allHist
allHist<- ggplot(data = data, aes(x = response_error)) + geom_histogram(bins = 100) + scale_y_continuous(limits=c(0, 700)) + labs(x = "Response Error (radians)", y = "Frequency") + facet_wrap(~ recog_band) + theme_classic() +
theme(
strip.text.x = element_text(
size = 12),
strip.background = element_rect(
color= 'white'
)) +
theme(axis.text.x = element_text(size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(size = 12, angle = 0, hjust = 1, vjust = 0, face = "plain"),
axis.title.x = element_text(size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(size = 12, angle = 90, hjust = .5, vjust = 2, face = "plain"))
allHist
source('~/GitHub/sourcemem/EXPIMG/analysis/code/mixtureModel.R', echo=TRUE)
View(low_data)
library(circular)
rayleigh.test(data[data$recog_band == 'Low',]$response_error)
nrow(data[data$recog_band == 'Low',]$response_error)
length(data[data$recog_band == 'Low',]$response_error)
hist(data[data$recog_band == 'Low',]$response_error)
