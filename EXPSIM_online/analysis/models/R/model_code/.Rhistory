png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=NUM.BINS, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response outcome (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.3), cex.axis= 0.75)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(1,2), asymm_predictions, "")
plot_asymm_recenter(c(4,5), asymm_predictions, "")
plot_asymm_recenter(c(3,4,5), asymm_predictions, "")
source('~/git/sourcemem_online/analysis/plot_recentered.R')
source('~/git/sourcemem_online/analysis/plot_recentered.R')
plot_asymm_recenter(c(3,4,5), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=NUM.BINS, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response outcome (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0.1, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(3,4,5), asymm_predictions, '')
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=NUM.BINS, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response outcome (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=NUM.BINS, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1.5, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=NUM.BINS, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1.5, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=30, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1.5, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(0.1, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=30, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0.1, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1.5, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=45, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
plot_asymm_recenter <- function(model_list, this_recentered_predictions, filename){
## Opens a drawing device (either X11 for testing or a
## PDF for saving).
if(filename == "") {
X11() # Write to the screen
} else {
png(file=filename, width=10.7, height=8.3, units = "in", pointsize = 12, res = 300)
}
# Set up panels
par(mfrow=c(2,3))
par(mar=c(0.1, 1.5, 0.1, 0.1),
oma=c(4, 4, 3, 4),
xaxs="i")
panel_idx <- 1
panel_labs <- c('+1', '+2', '+3', '-1', '-2', '-3')
for(i in directions){
for(j in lags){
this_panel_data <- data[(data$direction == i) & (data$filter == j),]
this_panel_model <- asymm_predictions[(asymm_predictions$direction == i) &
(asymm_predictions$lag == j),]
plot.new()
plot.window(xlim=c(X.RESP.LOW, X.RESP.HI),
ylim=c(Y.RESP.LOW, Y.RESP.HI))
## Compute and plot the empirical histograms for response error.
resp.hist <- hist(this_panel_data$error,
breaks=30, freq=FALSE,
plot=FALSE)
for(b in 2:length(resp.hist$breaks)) {
lo.break <- resp.hist$breaks[b-1]
hi.break <- resp.hist$breaks[b]
bar.height <- resp.hist$density[b-1]
rect(lo.break, 0.0, hi.break, bar.height, border=NA, col="grey70")
}
for(model.type in MODEL.TYPES[model_list]) {
model.data <- this_panel_model[this_panel_model$model == model.type, ]
points(model.data$value, model.data$prob, type="l", lty=2, lwd = 2, col=MODEL.COL[[model.type]])
}
## Plot the participant number and data type
mtext(paste0("Lag", panel_labs[panel_idx]), side=3, cex=0.85, line=-2, adj=0.1)
## Plot the x axes (for the bottom row only)
if(panel_idx %in% c(4, 5, 6)) {
axis(side=1, at=c(-pi, 0, pi), labels=c(expression(-pi), "0", expression(pi)),
cex.axis=AXIS.CEX)
mtext(paste("Response Offset (rads)"), side=1, cex=0.75, line=2.5)
} else {
axis(side=1, at=c(-pi, pi), lwd.ticks=0, labels=FALSE, cex.axis=0.75)
}
## Plot the y axes (for the participants in the first col)
if(panel_idx %in% c(1,4)) {
axis(side=2, at=c(0, 0.2), cex.axis= AXIS.CEX)
mtext(paste("Density"), side=2, cex=AXIS.CEX, cex.lab = AXIS.LABEL.CEX, line=2.5)
}
panel_idx <- panel_idx + 1
}
}
}
plot_asymm_recenter(c(), asymm_predictions, '')
