rep(bin.edge.right[36:72]
)
rep(bin.edge.left[1:36]
)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 73)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 2
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.3, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=216))
All.Q[,1] <- rep(c(1:72),each = 3)
All.Q[1:108,2] <- rep(bin.edge.left[1:36],each = 3)
All.Q[109:111] <- rep(0)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 73)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 2
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.3, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=216))
All.Q[,1] <- rep(c(1:72),each = 3)
All.Q[1:108,2] <- rep(bin.edge.left[1:36],each = 3)
All.Q[109:111,2] <- rep(0)
All.Q[112:216,2] <- rep(bin.edge.right[37:72],each = 3)
bin.edges.left
bin.edge.left
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 73)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 2
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.3, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=216))
All.Q[,1] <- rep(c(1:72),each = 3)
All.Q[1:108,2] <- rep(bin.edge.left[1:36],each = 3)
All.Q[109:111,2] <- rep(0)
All.Q[112:216,2] <- rep(bin.edge.right[38:72],each = 3)
All.Q[,3] <- c(.1,.3,.9)
#Had a bit of difficulty getting the third column (Actual RTs) in- this is my shoddy workaround
RTtrans <- t(RTQ)
All.Q[,4] <- c(RTtrans)
colnames(All.Q) <- c("Angle_Bin","Angle","Error_Quantile","Error")
All.Q$Error_Quantile <- as.factor(All.Q$Error_Quantile)
#name = paste("errorQuantile",i,sep="_")
errorPlot <- ggplot(data = All.Q,aes(x=All.Q$Angle, y=All.Q$Error, group=All.Q$Error_Quantile, colour = Error_Quantile)) + geom_point() + geom_smooth(se=FALSE) + labs(title =paste("Response Error Quantiles by Response Angle, Participant No. ",i,sep = " "), x = "Response Angle (rads)", y = "Response Error (rads)") + scale_colour_manual(values=cbPalette)
errorPlot
#assign(name,errorPlot)
#ggsave(errorPlot, filename= (sprintf("%s_errorQuant.png",participants[[i]])))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 10)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.3, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=27))
All.Q[,1] <- rep(c(1:9),each = 3)
All.Q[1:12,2] <- rep(bin.edge.left[1:4],each = 3)
All.Q[13:15,2]<- rep(0)
All.Q[16:27,2] <- rep(bin.edge.right[6:9],each = 3)
All.Q[,3] <- c(.1,.3,.9)
#Had a bit of difficulty getting the third column (Actual RTs) in- this is my shoddy workaround
RTtrans <- t(RTQ)
All.Q[,4] <- c(RTtrans)
colnames(All.Q) <- c("Angle_Bin","Angle","Error_Quantile","Error")
All.Q$Error_Quantile <- as.factor(All.Q$Error_Quantile)
#name = paste("errorQuantile",i,sep="_")
errorPlot <- ggplot(data = All.Q,aes(x=All.Q$Angle, y=All.Q$Error, group=All.Q$Error_Quantile, colour = Error_Quantile)) + geom_point() + geom_smooth(se=FALSE) + labs(title =paste("Response Error Quantiles by Response Angle, Participant No. ",i,sep = " "), x = "Response Angle (rads)", y = "Response Error (rads)") + scale_colour_manual(values=cbPalette)
errorPlot
#assign(name,errorPlot)
#ggsave(errorPlot, filename= (sprintf("%s_errorQuant.png",participants[[i]])))
bin.edge.right <- seq(-pi, pi, length.out = 100)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
bin.edge.left[1:4]
bin.edge.left[1:49]
bin.edge.right[50:99]
bin.edge.left[1:50]
99*3
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 100)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.5, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=297))
All.Q[,1] <- rep(c(1:99),each = 3)
All.Q[1:147,2] <- rep(bin.edge.left[1:50],each = 3)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 100)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.5, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=297))
All.Q[,1] <- rep(c(1:99),each = 3)
All.Q[1:148,2] <- rep(bin.edge.left[1:50],each = 3)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 10)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.5, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=27))
All.Q[,1] <- rep(c(1:9),each = 3)
All.Q[1:12,2] <- rep(bin.edge.left[1:4],each = 3)
All.Q[13:15,2]<- rep(0)
All.Q[16:27,2] <- rep(bin.edge.right[6:9],each = 3)
All.Q[,3] <- c(.1,.5,.9)
#Had a bit of difficulty getting the third column (Actual RTs) in- this is my shoddy workaround
RTtrans <- t(RTQ)
All.Q[,4] <- c(RTtrans)
colnames(All.Q) <- c("Angle_Bin","Angle","Error_Quantile","Error")
All.Q$Error_Quantile <- as.factor(All.Q$Error_Quantile)
#name = paste("errorQuantile",i,sep="_")
errorPlot <- ggplot(data = All.Q,aes(x=All.Q$Angle, y=All.Q$Error, group=All.Q$Error_Quantile, colour = Error_Quantile)) + geom_point() + geom_smooth(se=FALSE) + labs(title =paste("Response Error Quantiles by Response Angle, Participant No. ",i,sep = " "), x = "Response Angle (rads)", y = "Response Error (rads)") + scale_colour_manual(values=cbPalette)
errorPlot
#assign(name,errorPlot)
#ggsave(errorPlot, filename= (sprintf("%s_errorQuant.png",participants[[i]])))
bin.edge.left[1:4]
bin.edge.left
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 28)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.5, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=81))
All.Q[,1] <- rep(c(1:27),each = 3)
All.Q[1:39,2] <- rep(bin.edge.left[1:13],each = 3)
All.Q[39:41,2]<- rep(0)
All.Q[42:81,2] <- rep(bin.edge.right[15:27],each = 3)
bin.edge.right[15:27]
bin.edge.left[1:13]
bin.edge.left
length(rep(bin.edge.left[1:13],each = 3))
length(rep(bin.edge.right[15:27],each = 3))
42+39
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("~/GitHub/sourcemem/analysis/data")
dataset <- read.csv("dataset.csv", na.strings = " NA")
dataset <- dataset[,-1] #removes the first variable, which are these weird row labels
dataset[,3] <- as.numeric(factor(dataset$condition, levels=c(' LOW', ' HIGH')))
dataset$recog_rating <- as.factor(dataset$recog_rating) #Confidence Ratings are Discrete
# Set up all the different dataset subsets
#Group Level
# No Recognition Foils
dataset.no.na <- dataset[dataset$type!=' FOIL', ]
dataset.na <- dataset[dataset$type==' FOIL', ]
# Stimulus only, conditioned on imageability+concreteness ratings
dataset.low <- dataset.no.na[dataset.no.na$condition == 1, ]
dataset.high <- dataset.no.na[dataset.no.na$condition == 2, ]
participants = c("1","2","3","4","5","6","7","8","9","10","11","12","13","15","16","17","18","19","20")
#recognition ratings
dataset.recog_1 <- dataset.no.na[dataset.no.na$recog_rating==1, ]
dataset.recog_2 <- dataset.no.na[dataset.no.na$recog_rating==2, ]
dataset.recog_3 <- dataset.no.na[dataset.no.na$recog_rating==3, ]
dataset.recog_4 <- dataset.no.na[dataset.no.na$recog_rating==4, ]
dataset.recog_5 <- dataset.no.na[dataset.no.na$recog_rating==5, ]
dataset.recog_6 <- dataset.no.na[dataset.no.na$recog_rating==6, ]
dataset.unrecognised <- rbind(dataset.recog_1, dataset.recog_2, dataset.recog_3)
dataset.recognised <- rbind(dataset.recog_4, dataset.recog_5, dataset.recog_6)
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT>10),]
dataset.recognised <- dataset.recognised[!(dataset.recognised$response_RT<0.2),]
bin.edge.right <- seq(-pi, pi, length.out = 28)
bin.edge.right <- bin.edge.right[-1]
bin.edge.left <- c(-pi, bin.edge.right[1:(length(bin.edge.right)-1)])
n.bins <- length(bin.edge.right)
# The palette with grey for plot:
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#0072B2", "#D55E00", "#CC79A7")
i <- 1
data <- dataset.recognised[dataset.recognised$participant==i, ]
RTQ <- data.frame(matrix(ncol=0,nrow=0))
#Within those quantile bins, work out the RT quantiles
for(j in 1:n.bins) {
this.min <- bin.edge.left[j]
this.max <- bin.edge.right[j]
this.subset <- data[(data$target_angle >= this.min)&(data$target_angle < this.max), ]
this.errorQuantile<- quantile(this.subset$response_error,
probs=c(0.1, 0.5, 0.9))
RTQ <- rbind(RTQ,this.errorQuantile)
#data.subset <- rbind(data.subset,this.subset)
}
All.Q <- data.frame(matrix(ncol=4,nrow=81))
All.Q[,1] <- rep(c(1:27),each = 3)
All.Q[1:39,2] <- rep(bin.edge.left[1:13],each = 3)
All.Q[39:41,2]<- rep(0)
All.Q[42:81,2] <- rep(bin.edge.right[15:27],each = 3)
