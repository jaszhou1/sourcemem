axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'semantic'))
p3 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~semantic_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
filename <- sprintf('recenter_semantic_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 30, units = "cm")
}
models
plot.semantic.recenter(recentered_data, recentered_sim_data, c(1,2))
head(recentered_sim_data)
plot.temporal.recenter <- function(data, model, model_list, participant){
data$abs_lag <- abs(data$lag)
model$abs_lag <- abs(model$lag)
data <- data[data$abs_lag < 5,]
model <- model[model$abs_lag < 5,]
model <- model[model$model %in% model_names[model_list],]
#If participant is not supplied, plot all the data at a group level
if (missing(participant)){
participant <- 'Group'
} else {
data = data[data$participant == participant,]
model = model[model$participant == participant,]
}
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
stat_density(data = model[model$cond == 'unrelated', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on lag', 'Unrelated'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'semantic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on lag', 'Semantic'))
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'orthographic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on lag', 'Orthographic'))
p4 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~semantic_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s, recentered on lag', 'Overall'))
plot <- ggarrange(p1, p2, p3, p4, ncol = 1, nrow = 4, heights = c(1, 1, 1, 1))
filename <- sprintf('recenter_semantic_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 40, units = "cm")
}
plot.temporal.recenter(recentered_data, recentered_sim_data, c(1,4))
head(recentered_sim_data)
plot.spatial.recenter <- function(data, model, model_list, participant){
model <- model[model$model %in% model_names[model_list],]
#If participant is not supplied, plot all the data at a group level
if (missing(participant)){
participant <- 'Group'
} else {
data = data[data$participant == participant,]
model = model[model$participant == participant,]
}
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
stat_density(data = model[model$cond == 'unrelated', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Unrelated'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'semantic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Semantic'))
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'orthographic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spacial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Orthographic'))
p4 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s, recentered on space', 'Overall'))
plot <- ggarrange(p1, p2, p3, p4, ncol = 1, nrow = 4, heights = c(1, 1, 1, 1))
filename <- sprintf('recenter_spatial_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 40, units = "cm")
}
plot.spatial.recenter(recentered_data, recentered_sim_data, c(1,4))
plot.spatial.recenter <- function(data, model, model_list, participant){
model <- model[model$model %in% model_names[model_list],]
#If participant is not supplied, plot all the data at a group level
if (missing(participant)){
participant <- 'Group'
} else {
data = data[data$participant == participant,]
model = model[model$participant == participant,]
}
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
stat_density(data = model[model$cond == 'unrelated', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Unrelated'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'semantic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Semantic'))
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'orthographic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Orthographic'))
p4 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.3) +
facet_grid(~spatial_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s, recentered on space', 'Overall'))
plot <- ggarrange(p1, p2, p3, p4, ncol = 1, nrow = 4, heights = c(1, 1, 1, 1))
filename <- sprintf('recenter_spatial_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 40, units = "cm")
}
plot.spatial.recenter(recentered_data, recentered_sim_data, c(1,4))
plot.spatial.recenter <- function(data, model, model_list, participant){
model <- model[model$model %in% model_names[model_list],]
#If participant is not supplied, plot all the data at a group level
if (missing(participant)){
participant <- 'Group'
} else {
data = data[data$participant == participant,]
model = model[model$participant == participant,]
}
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
stat_density(data = model[model$cond == 'unrelated', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 1) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Unrelated'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'semantic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 1) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Semantic'))
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'orthographic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 1) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Orthographic'))
p4 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 1) +
facet_grid(~spatial_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s, recentered on space', 'Overall'))
plot <- ggarrange(p1, p2, p3, p4, ncol = 1, nrow = 4, heights = c(1, 1, 1, 1))
filename <- sprintf('recenter_spatial_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 40, units = "cm")
}
plot.spatial.recenter(recentered_data, recentered_sim_data, c(1,4))
plot.spatial.recenter <- function(data, model, model_list, participant){
model <- model[model$model %in% model_names[model_list],]
#If participant is not supplied, plot all the data at a group level
if (missing(participant)){
participant <- 'Group'
} else {
data = data[data$participant == participant,]
model = model[model$participant == participant,]
}
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
stat_density(data = model[model$cond == 'unrelated', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Unrelated'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'semantic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Semantic'))
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ], aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model[model$cond == 'orthographic', ], aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
legend.position = "none",
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white")) +
ggtitle(sprintf('%s condition, recentered on space', 'Orthographic'))
p4 <- ggplot() +
geom_histogram(data = data, aes(x = offset, y = ..density..), colour = 1, fill = 'grey70', bins = 20) +
geom_density(data = model, aes(x = offset,  color = model), kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1.2, bounds = c(-3.14, 3.14)) +
ylim(0, 0.5) +
facet_grid(~spatial_bin)  +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
ylab("Density") +
theme(text = element_text(size=20),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 12),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(sprintf('%s, recentered on space', 'Overall'))
plot <- ggarrange(p1, p2, p3, p4, ncol = 1, nrow = 4, heights = c(1, 1, 1, 1))
filename <- sprintf('recenter_spatial_%s.png', participant)
ggsave(filename, plot = last_plot(), width = 40, height = 40, units = "cm")
}
plot.spatial.recenter(recentered_data, recentered_sim_data, c(1,4))
