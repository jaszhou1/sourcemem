sp3_model <- sim_data[sim_data$participant %in% c(7, 8, 9),]
plot.super.error(sp1_data, sp1_model, c(3,4), 'Equal')
plot.super.error(sp2_data, sp2_model, c(3,4), 'Equal')
plot.super.error(sp3_data, sp3_model, c(3,4), 'Equal')
plot.super.error(sp1_data, sp1_model, c(3,4), 'Equal')
plot.super.error(sp2_data, sp2_model, c(3,4), 'Equal')
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
plot.super.error(sp3_data, sp3_model, c(3,4), 'Equal')
plot.super.error(sp2_data, sp2_model, c(3,4), 'Equal')
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/5) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 0.7,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', breaks = c(0, 0.75), labels = (c('0', '0.75'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
sp1_data <- data[data$participant %in% c(1, 2, 4, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
plot.super.error(sp2_data, sp2_model, c(3,4), 'Equal')
plot.super.error(sp3_data, sp3_model, c(3,4), 'Equal')
source("~/git/sourcemem/EXPINT/analysis/superparticipants.R")
View(res)
sp2_data <- data[data$participant %in% c(4, 3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
source("~/git/sourcemem/EXPINT/analysis/plotting/response_error/publication_v2.R")
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/5) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', breaks = c(0, 0.75), labels = (c('0', '0.75'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(4, 3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (4, 3, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(4, 3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (4, 3, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/5) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 0.8), breaks = c(0, 0.8), labels = (c('0', '0.8'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(4, 3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (4, 3, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/5) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 1.2), breaks = c(0, 1.2), labels = (c('0', '1.2'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(4, 3, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (4, 3, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6, 10),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6, 10),]
sp2_data <- data[data$participant %in% c(3, 4, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6, 10)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (3, 4, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/10) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 1.2), breaks = c(0, 1.2), labels = (c('0', '1.2'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6, 10),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6, 10),]
sp2_data <- data[data$participant %in% c(3, 4, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6, 10)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (3, 4, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/4) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 1.2), breaks = c(0, 1.2), labels = (c('0', '1.2'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6, 10),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6, 10),]
sp2_data <- data[data$participant %in% c(3, 4, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6, 10)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (3, 4, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/7) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 1.2), breaks = c(0, 1.2), labels = (c('0', '1.2'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6, 10),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6, 10),]
sp2_data <- data[data$participant %in% c(3, 4, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6, 10)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (3, 4, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
plot.super.error <- function(data, model, model_list, superparticipant){
model <- model[model$model %in% model_names[model_list],]
plot <- ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 'grey80', fill = 'grey80', boundary = 0, binwidth = 1/7) +
# geom_histogram(data = model, aes(x = simulated_error, y = ..density.., fill = model_name), bins = 50, alpha = 0.2) +
stat_density(data = model, aes(x = simulated_error,
color = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta')),
lty = factor(model_name, levels = c('Spatiotemporal', 'Four Factor','Spatiotemporal-Orthographic',
'Four Factor Gamma', 'Spatiotemporal-Orthographic Gamma',
'Semantic Beta'))),
kernel = 'epanechnikov', adjust = 1,
position="identity",geom="line", linewidth = 1, bounds = c(-3.14, 3.14)) +
facet_grid(~condition) +
scale_x_continuous(name = 'Source Error', breaks = c(-3.14, 0, 3.14), labels = c(expression(-pi), "0", expression(pi))) +
scale_y_continuous(name = 'Density', limits = c(0, 1.2), breaks = c(0, 1.2), labels = (c('0', '1.2'))) +
scale_color_manual(values = colours[c(model_list)]) +
scale_linetype_manual(values = line.types[c(model_list)]) +
ylab("Density") +
theme(text = element_text(size=14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 11),
axis.ticks = element_line(colour = "grey70", size = 0.2),
axis.line.x = element_line(color="black", size = 0.2),
axis.line.y = element_line(color="black", size = 0.2),
axis.text.x = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"),
legend.title = element_blank(),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.position = 'bottom',
legend.box="vertical",
legend.justification = "left",
legend.margin=margin(),) +
ggtitle(superparticipant)
return(plot)
}
plot.superparticipants <- function(model_list){
sp1_data <- data[data$participant %in% c(1, 2, 5, 6),]
sp1_model <- sim_data[sim_data$participant %in% c(1, 2, 4, 5, 6),]
sp2_data <- data[data$participant %in% c(3, 4, 9),]
sp2_model <- sim_data[sim_data$participant %in% c(4, 3, 9),]
sp3_data <- data[data$participant %in% c(7, 8, 10),]
sp3_model <- sim_data[sim_data$participant %in% c(7, 8, 10),]
p1 <- plot.super.error(sp1_data, sp1_model, model_list, 'Semantics ≈ Unrelated (1, 2, 5, 6)')
p2 <- plot.super.error(sp2_data, sp2_model, model_list, 'Semantics > Unrelated (3, 4, 9)')
p3 <- plot.super.error(sp3_data, sp3_model, model_list, 'Semantics < Unrelated (7, 8, 10)')
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1), common.legend = TRUE, legend = 'bottom')
return(plot)
}
plot.superparticipants(c(3,4))
super_plot <- plot.superparticipants(c(3,4))
filename <- 'fig6.png'
ggsave(filename, plot = super_plot, width = 20, height = 25, units = "cm")
super_plot <- plot.superparticipants(c(3,4))
filename <- 'fig6.png'
ggsave(filename, plot = super_plot, width = 20, height = 22, units = "cm")
Sel = c(1, 0,  1, 0, 0,   1, 0, 0,  0, 0, 0,   1, 0, 0,  0, 0, 0,  1, 0, 0,   1, 1, 0, 0, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0)
sum(Sel)
Sel = c(1, 1,  1, 0, 0,   1, 0, 0,  1, 0, 0,   1, 0, 0,  1, 0, 0,  1, 0, 0,   1, 1, 0, 0, 0, 0,   1, 0, 0,  1, 0, 0,  1, 0, 0)
sum(Sel)
upper <- c(30, 30,  1,     2,     1,      0.8,   1,     1,      10,     10,     10,     20, 20)
length(upper)
upper <- c(35,  30, 1,   0.9,    0.9,    0.9,    1,    1,   1,   20,    20,   20,    20)
length(upper)
upper <- c(30, 30, 1,     2,     1,      0.8,   1,      10,     10,     10,     20)
length(upper)
upper <- c(30, 30,  1,     2,     1,      0.8,   1,     1,      10,     10,     10,     20, 20)
length(upper)
source("~/git/sourcemem/EXPINT/analysis/plotting/response_error/publication_v2.R")
source("~/git/sourcemem/EXPINT/analysis/plotting/response_error/publication_v2.R")
source("~/git/sourcemem/EXPINT/analysis/plotting/response_error/publication_response_error.R")
plot.all(c(1,2,3,4))
source("~/git/sourcemem/EXPINT/analysis/superparticipants.R")
View(res)
write.csv(res, 'superparticipant.csv')
source("~/git/sourcemem/EXPINT/analysis/plotting/diffusion/plot_diffusion_conditions.R")
plot.participant(model_list = c(1,3))
plot.participant(model_list = c(1,3))
plot.participant(model_list = c(1,3))
response_error
unique(data$condition)
debugSource("~/git/sourcemem/EXPINT/analysis/plotting/diffusion/plot_diffusion_conditions.R")
debugSource("~/git/sourcemem/EXPINT/analysis/plotting/diffusion/plot_diffusion_conditions.R")
plot.participant(model_list = c(1,3))
View(data)
View(data)
data <- read.csv("~/git/sourcemem/EXPINT/analysis/modelling/MATLAB/EXPINT_data.csv")
# Exclude data from practice blocks
data <- data[data$block != -1,]
# Get rid of foil data, and data with invalid RT
data <- data[(data$valid_RT) & (data$is_stimulus),]
data <- data[data$recog_rating %in% c(0,8,9),]
# Express RTs in seconds, not ms
data$source_RT <- data$source_RT/1000
View(data)
debugSource("~/git/sourcemem/EXPINT/analysis/plotting/diffusion/plot_diffusion_conditions.R")
debugSource("~/git/sourcemem/EXPINT/analysis/plotting/diffusion/plot_diffusion_conditions.R")
plot.participant(model_list = c(1,3))
force(data)
View(data)
