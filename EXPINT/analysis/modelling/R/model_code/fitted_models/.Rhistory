ggtitle('title') + xlab("Error (rad)") + ylab("Density") + expand_limits(y = c(0, 0.20)) +
theme(
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
plot.title = element_text(color="black", size=14),
axis.title.x = element_text(color="black", size=14),
axis.title.y = element_text(color="black", size=14),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
return(plot)
}
compare_model(data, plot_1_models)
ggplot(recentered_all, aes(x=error, y = ..density..)) + geom_histogram(bins = 30, fill = model)
ggplot(recentered_all, aes(x=error, y = ..density..)) + geom_histogram(bins = 30, folor = model)
ggplot(recentered_all, aes(x=error, y = ..density..)) + geom_histogram(bins = 30, color = model)
View(recentered_all)
recentered_all$model
ggplot(recentered_all, aes(x=error, y = ..density.., color = model)) + geom_histogram(bins = 30)
compare_model <- function(data, models){
plot <- ggplot(data, aes(x=error, y = ..density..)) + geom_histogram(bins = 30,  alpha = 0.9) +
geom_density(data = models, aes(color = model)) +
scale_x_continuous(breaks  = c(-pi, 0, pi),
labels = c("-\u03c0", "0", "\u03c0")) +
ggtitle('title') + xlab("Error (rad)") + ylab("Density") + expand_limits(y = c(0, 0.20)) +
theme(
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
plot.title = element_text(color="black", size=14),
axis.title.x = element_text(color="black", size=14),
axis.title.y = element_text(color="black", size=14),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
return(plot)
}
compare_model(data, plot_1_models)
View(plot_1_models)
compare_model <- function(data, models){
plot <- ggplot(data, aes(x=error, y = ..density..)) + geom_histogram(bins = 30,  alpha = 0.9) +
geom_density(data = models, aes(color = model, weight = 1)) +
scale_x_continuous(breaks  = c(-pi, 0, pi),
labels = c("-\u03c0", "0", "\u03c0")) +
ggtitle('title') + xlab("Error (rad)") + ylab("Density") + expand_limits(y = c(0, 0.20)) +
theme(
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
plot.title = element_text(color="black", size=14),
axis.title.x = element_text(color="black", size=14),
axis.title.y = element_text(color="black", size=14),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
return(plot)
}
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data, plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data,plot_1_models)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data,plot_1_models)
compare_model(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
head(recenter_all())
head(recentered_all)
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model_asymm(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
unique(recentered_all$model)
plot_2_model_strings <- c("Intrusion + Guess", "Temporal Gradient")
plot_2_models <- recentered_all[recentered_all$model %in% plot_2_model_strings,]
compare_model_asymm(data,plot_2_models, 'Flat and Temporal Gradient Recentered Asymmetry')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
plot_2_model_strings <- c("Intrusion + Guess", "Temporal Gradient")
plot_2_models <- recentered_all[recentered_all$model %in% plot_2_model_strings,]
compare_model_asymm(data,plot_2_models, 'Flat and Temporal Gradient Recentered Asymmetry')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model_asymm(data,plot_2_models, 'Flat and Temporal Gradient Recentered Asymmetry')
source('~/git/sourcemem_online/analysis/models/R/model_code/recenter_exp1.R')
compare_model_asymm(data,plot_2_models, 'Flat and Temporal Gradient Recentered Asymmetry')
plot_2_model_strings <- c("Intrusion + Guess", "Temporal Gradient", "Spatiotemporal Gradient")
plot_2_models <- recentered_all[recentered_all$model %in% plot_2_model_strings,]
compare_model_asymm(data,plot_2_models, 'Flat and Temporal Gradient Recentered Asymmetry')
plot_1_model_strings <- c("Pure Guess", "Pure Intrusion", "Intrusion + Guess")
plot_1_models <- recentered_all[recentered_all$model %in% plot_1_model_strings,]
compare_model(data,plot_1_models, 'Threshold and Intrusion Recentered Predictions')
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
x <- get_average_error_across_position(sim_spatiotemporal, )
x <- get_average_error_across_position(sim_spatiotemporal, 'spatiotemporal')
View(data)
position
View(data)
head(sim_temporal)
x <- get_average_error_across_position(sim_spatiotemporal, 'spatiotemporal')
View(data)
x <- get_average_error_across_position(sim_spatiotemporal, 'spatiotemporal')
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
x <- get_average_error_across_position(sim_spatiotemporal, 'spatiotemporal')
this_data
View(this_average_error)
i
position
data
i
x <- get_average_error_across_position(sim_spatiotemporal, 'spatiotemporal')
View(this_average_error)
View(this_average_error)
View(this_average_error)
View(this_average_error)
View(this_average_error)
View(this_average_error)
concatenate_model_average_error <- function(){
mix <- get_average_error_across_position(sim_mix, 'Pure Guess')
pure_int <- get_average_error_across_position(sim_pure_intrusion, 'Pure Intrusion')
int <- get_average_error_across_position(sim_intprec, 'Intrusion + Guess')
temp <- get_average_error_across_position(sim_temporal, 'Temporal')
spatio <- get_average_error_across_position(sim_spatiotemporal, 'Spatiotemporal')
res <- rbind(mix, pure_int, int, temp, spatio)
return(res)
}
x <- concatenate_model_average_error()
x <- concatenate_model_average_error()
x <- concatenate_model_average_error()
x <- concatenate_model_average_error()
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
x <- concatenate_model_average_error()
View(x)
data <- data.frame(matrix(nrow = 10, ncol = 3))
colnames(this_average_error) <- c('position','error','model')
for (i in 1:10){
this_average_error[i,1] <- i
this_average_error[i,2] <- serial_position(i, data)
}
models <- concatenate_model_average_error()
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
errors_across_serial_position(data)
errors_across_serial_position <- function(data){
serial_position_data <- data.frame(matrix(nrow = 10, ncol = 3))
colnames(this_average_error) <- c('position','error','model')
serial_position_data[i,3] <- 'data'
for (i in 1:10){
serial_position_data[i,1] <- i
serial_position_data[i,2] <- serial_position(i, data)
}
models <- concatenate_model_average_error()
plot <- ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
scale_x_continuous(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.90, max(1.05, max(serial_errors$error) + 0.05))) +
scale_color_manual(values=c("black", "red"))
return(plot)
}
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
errors_across_serial_position(data)
debugSource('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
errors_across_serial_position(data)
View(serial_position_data)
serial_position_data[,3] <- 'data'
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2)
serial_position_data <- data.frame(matrix(nrow = 10, ncol = 3))
colnames(serial_position_data) <- c('position','error','model')
serial_position_data[,3] <- 'data'
for (i in 1:10){
serial_position_data[i,1] <- i
serial_position_data[i,2] <- serial_position(i, data)
}
plot <- ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = simulated_error))
plot
head(models)
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = error))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, y = position))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, y = position, color = model))
View(models)
x <- models[modesl$model == 'Temporal',]
x <- models[models$model == 'Temporal',]
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = x, method = 'loess', se = FALSE, aes(x = position, y = position))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = x, method = 'loess', se = FALSE, aes(x = position))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model))
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.90, max(1.05, max(serial_errors$error) + 0.05)))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model))
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.90, 1.10))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model)) +
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.90, 1.10))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model)) +
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.95, 1.05))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model)) +
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.95, 1.1))
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model)) +
scale_x_discrete(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.95, 1.1)) +
theme(
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
plot.title = element_blank(),
axis.title.x = element_text(color="black", size=14),
axis.title.y = element_text(color="black", size=14),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
ggplot(data=serial_position_data, aes(x=position, y = error)) +
geom_point(size = 2) +
geom_smooth(data = models, method = 'loess', se = FALSE, aes(x = position, color = model)) +
scale_x_continuous(name = 'Study List Position', breaks = 1:10) +
scale_y_continuous(name = 'Average Absolute Error (rad)', breaks = c(1, 1.05), limits = c(0.95, 1.1)) +
theme(
axis.text.x = element_text(color="black", size = 12),
axis.text.y = element_text(color="black", size = 12),
plot.title = element_blank(),
axis.title.x = element_text(color="black", size=14),
axis.title.y = element_text(color="black", size=14),
plot.background = element_rect(fill = "white"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black")
)
source('~/git/sourcemem_online/analysis/models/R/model_code/plot_model_predictions.R')
plot_data(data, plot_2_models, color_wheel[3:5])
source('~/git/sourcemem_online/analysis/plot_recentered.R')
compare_model_asymm(data,plot_3_models, 'Recentered Asymmetry', c(color_wheel[3], color_wheel[4], color_wheel[5]))
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recenter_data(data)
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recenter_data(data)
recenter_data(data)
this_intrusions
this_intrusions[[j]]
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recenter_data(data)
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recenter_data(data)
View(recentered_errors)
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recenter_data(data)
recentered_pure_intrusion <- recenter_model(sim_pure_intrusion)
recentered_intrusion <- recenter_model(data, sim_intrusion)
recentered_intrusion <- recenter_model(data, sim_intrusion)
this_intrusions
this_intrusions[[j]]
this_response_angle
this_response_angle <- as.numeric(model[i,]$simulated_response)
this_target_angle <- as.numeric(model[i,]$target_angle)
angle_diff(this_response_angle, this_intrusions[[j]])
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recentered_intrusion <- recenter_model(data, sim_intrusion)
recentered_intrusion <- recenter_model(data, sim_intrusion)
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recentered_intrusion <- recenter_model(data, sim_intrusion)
recentered_intrusion <- recenter_model(data, sim_intrusion)
View(recentered_errors)
model[i, 'participant']
recentered_intrusion <- recenter_model(data, sim_intrusion)
recentered_intrusion <- recenter_model(data, sim_intrusion)
model[i, 'model']
View(model)
debugSource('~/git/sourcemem_online/analysis/plots/response_error/plot_recentered_orthosem.R')
recentered_intrusion <- recenter_model(data, sim_intrusion)
recentered_spatiotemporal <- recenter_model(data, sim_spatiotemporal, 'Spatiotemporal')
recentered_spatiotemporal <- recenter_model(data, sim_spatiotemporal, 'Spatiotemporal')
View(recentered_errors)
recentered_errors[idx,8] <- model_string
View(recentered_errors)
idx
idx + 1
idx <- idx + 1
idx
recentered_spatiotemporal <- recenter_model(data, sim_spatiotemporal, 'Spatiotemporal')
recentered_spatiotemporal <- recenter_model(data, sim_spatiotemporal, 'Spatiotemporal')
source("~/git/sourcemem/EXPINT/analysis/prelim_analyses.R")
source("~/git/sourcemem/EXPINT/analysis/prelim_analyses.R")
source("~/git/sourcemem/EXPINT/analysis/prelim_analyses.R")
source("~/git/sourcemem/EXPINT/analysis/prelim_analyses.R")
data$condition
this_data <- data[data$condition == "orthographic",]
ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
cond <- "orth"
ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
cond <- "orthographic"
ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
View(this_data)
View(this_data)
recenter_data <- recenter.data(data)
View(recenter_data)
recenter_data$cond
cond <- "orthographic"
this_data <- recenter_data[recenter_data$cond == cond,]
this_data <- data[data$cond == cond, ]
orth <- ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
orth
this_data <- recenter_data[recenter_data$cond == cond,]
orth <- ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
orth
View(data)
cond = 'unrelated'
this_data <- recenter_data[recenter_data$cond == cond,]
orth <- ggplot(this_data) + geom_histogram(aes(x = offset, y = ..density..), bins = 30) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', cond))
orth
View(data)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model.R")
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2022-12-26_fits.RData")
View(model_fits)
mean(model_fits$equal_nosem$gamma1)
mean(model_fits$equal_nosem$gamma2)
mean(model_fits$flat_gamma1$gamma2)
mean(model_fits$flat_gamma1$gamma1)
mean(model_fits$flat_gamma1$gamma3)
mean(model_fits$flat_gamma2$gamma3)
mean(model_fits$flat_gamma2$gamma2)
mean(model_fits$flat_gamma2$gamma1)
mean(model_fits$flat_gamma2$beta)
mean(model_fits$flat_gamma2$beta1)
mean(model_fits$flat_gamma2$beta2)
mean(model_fits$flat_gamma2$beta1)
mean(model_fits$spatiotemporal$beta1)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2022-12-26_simulated.RData")
View(sim_data)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2022-12-26_simulated.RData")
unique(sim_data$model)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/2022-11-03_response_error.RData")
data <- data[data$block != -1,]
# Exclude foils
data <- data[data$is_stimulus, ]
# Exclude data with inalid RT
data <- data[data$valid_RT, ]
# Load simulated datasets
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2022-12-26_simulated.RData")
data <- read.csv("~/git/sourcemem/EXPINT/data/EXPINT_data.csv")
data <- data[data$block != -1,]
# Exclude foils
data <- data[data$is_stimulus, ]
# Exclude data with inalid RT
data <- data[data$valid_RT, ]
head(sim_data)
head(data)
head(sim_data)
model <- sim_data
ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 1, fill = 'white', bins = 30) +
geom_density(data = models, aes(x = simulated_error, color = model), adjust = 1) +
facet_wrap(~condition)
library(ggplot2)
ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 1, fill = 'white', bins = 30) +
geom_density(data = models, aes(x = simulated_error, color = model), adjust = 1) +
facet_wrap(~condition)
ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 1, fill = 'white', bins = 30) +
geom_density(data = sim)data, aes(x = simulated_error, color = model), adjust = 1) +
ggplot() +
geom_histogram(data = data, aes(x = source_error, y = ..density..), colour = 1, fill = 'white', bins = 30) +
geom_density(data = sim_data, aes(x = simulated_error, color = model), adjust = 1) +
facet_wrap(~condition)
View(model)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2022-12-26_fits.RData")
View(model_fits)
model_fits[[1]]
model_fits[[1]]$kappa1
model_fits[[2]]$kappa1
model_fits[[3]]$kappa1
model_fits[[4]]$kappa1
model_fits[[6]]$kappa1
model_fits[[20]]$kappa1
model_fits[[14]]$kappa1
model_fits[[13]]$kappa1
model_fits[[12]]$kappa1
model_fits[[12]]$kappa2
model_fits[[5]]$kappa2
model_fits[[5]]$kappa1
model_fits[[5]]$kappa2
model_fits[[5]]$beta1
model_fits[[5]]$beta2
model_fits[[5]]$gamma1
model_fits[[6]]$kappa1
model_fits[[6]]$kappa2
model_fits[[6]]$kappa1
model_fits[[6]]$gamma1
model_fits[[6]]$gamma2
model_fits[[7]]$lambda_b1
model_fits[[7]]$lambda_b2
model_fits[[7]]$lambda_f1
model_fits[[7]]$zeta1
model_fits[[7]]$zeta2
model_fits[[7]]$iota1
model_fits[[7]]$iota2
model_fits[[7]]$upsilon1
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/fitted_models/2023-02-25_fits.RData")
model_fits[7]
model_fits[-7]
setwd("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/fitted_models")
# Put all the aics together
AICs <- setNames(data.frame(matrix(nrow = 10, ncol = length(model_fits))), model_names)
model_names <- c('flat_intrusion', 'flat_gamma1', 'flat_gamma2','temporal',
'asym_temporal', 'spatial', 'temporal_ortho',
'spatial_ortho', 'spatiotemporal', 'spatiotemporal_ortho',
'four_factor', 'temporal_weight', 'spatial_weight',
'spatiotemporal_weight', 'temporal_decay', 'spatial_decay',
'spatiotemporal_decay')
AICs <- setNames(data.frame(matrix(nrow = 10, ncol = length(model_fits))), model_names)
for(i in 1:length(model_fits)){
AICs[,i] <- model_fits[[i]]$aic
}
AICs[11,] <- colSums(AICs)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/AIC_weight.R")
wAIC <- AIC_weight(AICs, paste(toString(Sys.Date()), '_AIC.csv', sep =""))
View(model_fits)
model_fits <- model_fits[-7]
View(model_fits)
AICs <- setNames(data.frame(matrix(nrow = 10, ncol = length(model_fits))), model_names)
for(i in 1:length(model_fits)){
AICs[,i] <- model_fits[[i]]$aic
}
AICs[11,] <- colSums(AICs)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/AIC_weight.R")
wAIC <- AIC_weight(AICs, paste(toString(Sys.Date()), '_AIC.csv', sep =""))
save(model_fits, file = paste(toString(Sys.Date()), '_fits.RData', sep =""))
0.224 ^ 0
