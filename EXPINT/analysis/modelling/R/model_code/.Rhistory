library(CircStats)
library(circular)
library(DEoptim)
library(ggplot2)
library(extraDistr)
library(foreach)
library(doParallel)
library(plyr)
library(R.utils)
library(statip)
## Handle data prior to modelling
data <- read.csv("~/git/sourcemem/EXPINT/data/EXPINT_data.csv")
setwd("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code")
# Exclude data from practice blocks
data <- data[data$block != -1,]
# Exclude foils
data <- data[data$is_stimulus, ]
# Exclude data with inalid RT
data <- data[data$valid_RT, ]
View(data)
View(data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/1_saturated.R")
saturated(data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2_fixed_guess.R")
fixed_guess(data)
Sel = c(1, 1,  1, 0, 0,   1, 1, 1,    1, 1, 1,  1, 1, 1,  1, 1, 1,  1, 1, 1,    1, 1, 1, 1, 1, 1,   1, 1, 1,  1, 1, 1,  1, 1, 1)
beta2 <- NA
beta3 <- NA
Pfix = c(beta2, beta3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
Pbounds <- matrix(data = NA, nrow = 2, ncol = 35)
#          prec1, prec2, beta1, beta2, beta3, gamma1, gamma2, gamma3, rho1, rho2, rho3, chi1, psi1, tau1, lambda_b1, lambda_f1, zeta1, iota1, upsilon1
colnames(Pbounds) <- c('kappa1', 'kappa2', 'beta1', 'gamma1', 'gamma2', 'gamma3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3')
length(c('kappa1', 'kappa2', 'beta1', 'gamma1', 'gamma2', 'gamma3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3'))
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/2_fixed_guess.R")
fixed_guess(data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/3_two_condition.R")
two_cond(data)
rho1 = 0.6
chi1 = 0.7
psi = 0.4
Sel = c(1, 1,  1, 1, 1,   1, 1, 1,    1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1, 1,  1, 1, 1,    1, 1, 1, 1, 1, 1,   1, 1, 1,  1, 1, 1,  1, 1, 1)
Pfix = NULL
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
Pbounds <- matrix(data = NA, nrow = 2, ncol = 38)
#          prec1, prec2, beta1, beta2, beta3, gamma1, gamma2, gamma3, rho1, rho2, rho3, chi1, psi1, tau1, lambda_b1, lambda_f1, zeta1, iota1, upsilon1
colnames(Pbounds) <- c('kappa1', 'kappa2', 'beta1', 'beta2', 'beta3', 'gamma1', 'gamma2', 'gamma3', 'psi1', 'psi2', 'psi3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3')
Pbounds[1,] <- c(1, 1, 0.2, 0.2, 0.2, 0.01, 0.03, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
Pbounds[2,] <- c(20, 15, 0.6, 0.6, 0.6, 0.4, 0.4, 0.4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  0.7,   0.7,   0.7,   2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6)
View(Pbounds)
Sel = c(1, 1,  1, 0, 0,   1, 1, 1,    1, 1, 1,  1, 1, 1,  1, 1, 1,  1, 1, 1,  1, 1, 1,    1, 1, 1, 1, 1, 1,   1, 1, 1,  1, 1, 1,  1, 1, 1)
beta2 <- NA
beta3 <- NA
Pfix = c(beta2, beta3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
Pbounds <- matrix(data = NA, nrow = 2, ncol = 36)
#          prec1, prec2, beta1, beta2, beta3, gamma1, gamma2, gamma3, rho1, rho2, rho3, chi1, psi1, tau1, lambda_b1, lambda_f1, zeta1, iota1, upsilon1
colnames(Pbounds) <- c('kappa1', 'kappa2', 'beta1', 'gamma1', 'gamma2', 'gamma3', 'phi1', 'phi2', 'phi3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3')
Pbounds[1,] <- c(1, 1, 0.2, 0.01, 0.03, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
Pbounds <- matrix(data = NA, nrow = 2, ncol = 36)
#          prec1, prec2, beta1, beta2, beta3, gamma1, gamma2, gamma3, rho1, rho2, rho3, chi1, psi1, tau1, lambda_b1, lambda_f1, zeta1, iota1, upsilon1
colnames(Pbounds) <- c('kappa1', 'kappa2', 'beta1', 'gamma1', 'gamma2', 'gamma3', 'phi1', 'phi2', 'phi3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3')
Pbounds[1,] <- c(1, 1, 0.2, 0.01, 0.03, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
Pbounds[2,] <- c(20, 15, 0.6, 0.4, 0.4, 0.4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,   0.7,   0.7,   2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6)
View(Pbounds)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/1_saturated.R")
saturated(data)
View(saturated)
View(intrusion_cond_model)
saturated(data)
phi1
phi2
phi3
phi1
sum1
psi1
ph1
phi1
phi2
phi3
View(intrusion_weights)
gamma
gamm1
gamma1
View(trial_weights)
View(trial_weights)
View(trial_weights)
trial_weights < 0
any(trial_weights < 0)
trial_weights[trial_weights < 0]
saturated(data)
sum(trial_weights[2360])
saturated(data)
any(trial_weights < 0)
gamma
gamma1
gamma2
gamma3
bounds
Pbounds <- matrix(data = NA, nrow = 2, ncol = 38)
#          prec1, prec2, beta1, beta2, beta3, gamma1, gamma2, gamma3, rho1, rho2, rho3, chi1, psi1, tau1, lambda_b1, lambda_f1, zeta1, iota1, upsilon1
colnames(Pbounds) <- c('kappa1', 'kappa2', 'beta1', 'beta2', 'beta3', 'gamma1', 'gamma2', 'gamma3', 'phi1', 'phi2', 'phi3', 'rho1', 'rho2', 'rho3', 'chi1', 'chi2', 'chi3', 'psi1', 'psi2', 'psi3', 'tau1', 'tau2', 'tau3', 'lambda_b1', 'lambda_f1', 'lambda_b2', 'lambda_f2', 'lambda_b3', 'lambda_f3','zeta1', 'zeta2', 'zeta3', 'iota1', 'iota2', 'iota3', 'upsilon1', 'upsilon2', 'upsilon3')
Pbounds[1,] <- c(1, 1, 0.2, 0.2, 0.2, 0.01, 0.03, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0.5, 0.5, 0.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
Pbounds[2,] <- c(20, 15, 0.6, 0.6, 0.6, 0.4, 0.4, 0.4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  0.7,   0.7,   0.7,   2, 2, 2, 2, 2, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6)
View(Pbounds)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/1_saturated.R")
View(Pbounds)
saturated(data)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/old_models/initial_fits.RData")
View(saturated)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/1_saturated.R")
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits.R")
saturated[data[data$participant == 1,]]
saturated(data[data$participant == 1,])
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits.R")
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits.R")
library(DEoptim)
library(ggplot2)
saturated(data[data$participant == 1,])
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits.R")
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits.R")
