# Exclude data from practice blocks
data <- data[data$block != -1,]
# Exclude foils
data <- data[data$is_stimulus, ]
# Exclude data with inalid RT
data <- data[data$valid_RT, ]
# Define some things to iterate through
participants <- unique(data$participant)
conds <- unique(data$condition)
# Function to calculate aic
get_aic <- function(L, n_params){
aic <- 2*L + 2*n_params
return(aic)
}
cosine_distance <- function(theta, phi){
distance <- 1 - cos(theta - phi)
return(distance)
}
angle_diff <- function(a,b){
diff <- atan2(sin(a-b), cos(a-b))
return(diff)
}
## Load in the model variants
setwd("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code")
source('updated_models.R')
models <- c(flat_intrusion, flat_gamma1, flat_gamma2)
model_names <- c('flat_intrusion', 'flat_gamma1', 'flat_gamma2')
this.data <- data[data$participant == 1,]
x <- flat_gamma1(this.data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
x <- flat_gamma1(this.data)
source('intrusion_cond_model_x.R')
x <- flat_gamma1(this.data)
View(intrusion_weights)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/run_fits_v2.R")
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
x <- flat_gamma1(this.data)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
View(intrusion_cond_model_x)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
x <- flat_gamma1(this.data)
View(intrusion_weights)
View(trial_weights)
View(trial_weights)
x <- flat_gamma2(this.data)
View(trial_weights)
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  0, 0, 0,   0, 0, 0,  0, 0, 0,  0, 0, 0,  0, 0, 0,    0, 0, 0, 0, 0, 0,   0, 0, 0,  0, 0, 0,  0, 0, 0)
sum(Sel)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
x <- flat_gamma2(this.data)
x <- flat_gamma2(this.data)
length(Pvar)
length(Pfix)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
x <- flat_gamma2(this.data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
x <- flat_gamma2(this.data)
View(trial_weights)
beta
beta1
beta2
beta3
View(trial_weights)
View(temporal_similarity)
View(intrusion_cond_model_x)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
temporal(this.data)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi1 <- 1
phi2 <- NA
phi3 <- NA
rho1 <- 0 # Spatial weight
rho2 <- NA
rho3 <- NA
chi1 <- 0 # Orthographic weight
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta1 <- 0 # Similarity decay of spatial similarity
zeta2 <- NA
zeta3 <- NA
iota1 <- 0 # Similarity decay of orthographic component unrelated
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi1, phi2, phi3, rho1, rho2, rho3,
chi1, chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3, lambda_b1,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3, zeta1,
zeta2, zeta3, iota1, iota2, iota3, upsilon1, upsilon2, upsilon3)
#       prec.  guess      intrus.   w.time     w.space   w.orth    w.sem    time asym   d.time              d.space    d.orth    d.sem
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  0, 0, 0,   0, 0, 0,  0, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   0, 0, 0,  0, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi1 <- 1
phi2 <- NA
phi3 <- NA
rho1 <- 0 # Spatial weight
rho2 <- NA
rho3 <- NA
chi1 <- 0 # Orthographic weight
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta1 <- 0 # Similarity decay of spatial similarity
zeta2 <- NA
zeta3 <- NA
iota1 <- 0 # Similarity decay of orthographic component unrelated
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi1, phi2, phi3, rho1, rho2, rho3,
chi1, chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3, zeta1,
zeta2, zeta3, iota1, iota2, iota3, upsilon1, upsilon2, upsilon3)
length(Sel[Sel == 1])
length(Sel[Sel == 0])
length(Pfix)
temporal(this.data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
temporal(this.data)
phi1
phi2
phi3
rho1
rho2
chi2
psi2
View(intrusion_weights)
View(intrusion_weights)
View(temporal_similarity)
View(spatial_similarity)
View(orthographic_similarity)
gamma1
phi2
View(temporal_similarity)
View(data)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
temporal(this.data)
data
View(data)
View(temporal_similarity)
View(data)
lambda_b1
lambda_b2
lambda_f1
temporal_shepard(1, 2, 0.5)
temporal_shepard(1, 2, 1, 0.5)
temporal_shepard(-1, 2, 1, 0.5)
temporal_shepard(-1, 2, 2, 0.5)
temporal_shepard(1, 2, 2, 0.5)
View(temporal_similarity)
View(data)
temporal(this.data)
data[,30:36]
x <- data[,30:36]
-7/7
max(data[,30:36])
data[,30:36]/max(data[,30:36])
y <- data[,30:36]/max(data[,30:36])
View(x)
View(y)
View(temporal_similarity)
x
temporal(this.data)
x <- data[,30:36]
y <- data[,30:36]/max(data[,30:36])
data[,30:36] <- data[,30:36]/max(data[,30:36])
temporal_similarity <- data.frame(matrix(nrow = nrow(data), ncol = n_intrusions))
temporal_similarity[data$condition=='unrelated',1:7] <- lapply(data[data$condition=='unrelated',30:36],
temporal_shepard,
k1 = lambda_b1, k2 = lambda_f1, tau = tau1)
View(temporal_similarity)
View(x)
temporal_shepard(1, lambda_b1, lambda_f1, tau1)
temporal_shepard(y[1,], lambda_b1, lambda_f1, tau1)
data[data$condition=='unrelated',30:36]
lapply(data[data$condition=='unrelated',30:36],
temporal_shepard,
k1 = lambda_b1, k2 = lambda_f1, tau = tau1)
x < lapply(data[data$condition=='unrelated',30:36],
temporal_shepard,
k1 = lambda_b1, k2 = lambda_f1, tau = tau1)
z <- lapply(data[data$condition=='unrelated',30:36],
temporal_shepard,
k1 = lambda_b1, k2 = lambda_f1, tau = tau1)
View(z)
z <- apply(data[data$condition=='unrelated',30:36],
temporal_shepard,
k1 = lambda_b1, k2 = lambda_f1, tau = tau1)
x_trans <- lapply(x, temporal_shepard, k = lambda_b1, k2 = lambda_f1, tau = tau1)
View(x_trans)
data.frame(x_trans)
df_x <- data.frame(x_trans)
View(df_x)
x_trans <- slapply(x, temporal_shepard, k = lambda_b1, k2 = lambda_f1, tau = tau1)
x_trans <- sapply(x, temporal_shepard, k = lambda_b1, k2 = lambda_f1, tau = tau1)
View(x_trans)
x_trans <- apply(x, c(1,2), temporal_shepard, k = lambda_b1, k2 = lambda_f1, tau = tau1)
View(x_trans)
x_trans[1,1]
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
temporal(this.data)
View(data)
View(temporal_similarity)
x <- lapply(data[data$condition=='unrelated',37:43], shepard_similarity, k = zeta1)
y <- apply(data[data$condition=='unrelated',37:43], c(1,2), shepard_similarity, k = zeta1)
View(x)
View(y)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
spatial(this.data)
debugSource("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/intrusion_cond_model_x.R")
spatial(this.data)
spatial(this.data)
length(Pvar)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/updated_models.R")
spatial(this.data)
View(temporal_similarity)
View(spatial_similarity)
x <- lapply(data[data$condition=='unrelated',37:43], shepard_similarity, k = zeta1)
View(x)
y <- apply(data[data$condition=='unrelated',37:43], c(1,2), shepard_similarity, k = zeta1)
df_x <- data.frame(x)
View(y)
View(df_x)
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   0, 0, 0,  1, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   0, 0, 0,  1, 0, 0,  0, 0, 0)
length(Sel[Sel == 0])
29 + 9
# Sel vector: defines which parameters are freed, and which are fixed, in the optimisation process.
#       prec.  guess      intrus.   w.time     w.space   w.orth    w.sem    time asym   d.time              d.space    d.orth    d.sem
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  0, 0, 0,   1, 0, 0,  1, 0, 0,  0, 0, 0,  0, 0, 0,   0, 0, 0, 0, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi1 <- 0
phi2 <- NA
phi3 <- NA
rho2 <- NA
rho3 <- NA
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_b1 <- 0
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta2 <- NA
zeta3 <- NA
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi1, phi2, phi3, rho2, rho3,
chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b1, lambda_b2, lambda_f2, lambda_b3, lambda_f3,
zeta2, zeta3, iota2, iota3, upsilon1, upsilon2, upsilon3)
length(Pfix)
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   0, 0, 0,  1, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   0, 0, 0,  1, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi2 <- NA
phi3 <- NA
rho1 <- 0 # Spatial weight
rho2 <- NA
rho3 <- NA
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta1 <- 0 # Similarity decay of spatial similarity
zeta2 <- NA
zeta3 <- NA
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi2, phi3, rho1, rho2, rho3,
chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3, zeta1,
zeta2, zeta3, iota2, iota3, upsilon1, upsilon2, upsilon3)
length(Pfix)
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi2 <- NA
phi3 <- NA
rho2 <- NA
rho3 <- NA
chi1 <- 0
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta2 <- NA
zeta3 <- NA
iota1 <- 0
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi2, phi3, rho2, rho3,
chi1, chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b1, lambda_b2, lambda_f2, lambda_b3, lambda_f3,
zeta2, zeta3, iota1, iota2, iota3, upsilon1, upsilon2, upsilon3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
#          prec1, prec2, beta1, gamma1, gamma2, phi1, rho1, lambda_b1, zeta1
lower <- c(1,     1,     0.1,   0,      0,      0,    0,     0,         0)
upper <- c(20,    15,    0.8,   0.5,    0.5,    1,    1,     5,        10)
length(Pfix)
length(lower)
# Sel vector: defines which parameters are freed, and which are fixed, in the optimisation process.
#       prec.  guess      intrus.   w.time     w.space   w.orth    w.sem    time asym   d.time              d.space    d.orth    d.sem
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   1, 0, 0,  0, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi2 <- NA
phi3 <- NA
rho2 <- NA
rho3 <- NA
chi1 <- 0
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta2 <- NA
zeta3 <- NA
iota1 <- 0
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi2, phi3, rho2, rho3,
chi1, chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3,
zeta2, zeta3, iota1, iota2, iota3, upsilon1, upsilon2, upsilon3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
#          prec1, prec2, beta1, gamma1, gamma2, phi1, rho1, lambda_b1, zeta1
lower <- c(1,     1,     0.1,   0,      0,      0,    0,     0,         0)
upper <- c(20,    15,    0.8,   0.5,    0.5,    1,    1,     5,        10)
length(Pfix)
length(lower)
# Sel vector: defines which parameters are freed, and which are fixed, in the optimisation process.
#       prec.  guess      intrus.   w.time     w.space   w.orth    w.sem    time asym   d.time              d.space    d.orth    d.sem
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   1, 0, 0,  1, 0, 0,  0, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   1, 0, 0,  1, 0, 0,  0, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi2 <- NA
phi3 <- NA
rho2 <- NA
rho3 <- NA
chi2 <- NA
chi3 <- NA
psi1 <- 0 # Semantic weight
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta2 <- NA
zeta3 <- NA
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon1 <- 0 # Similarity decay of semantic component unrelated
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi2, phi3, rho2, rho3,
chi2, chi3, psi1, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3,
zeta2, zeta3, iota2, iota3, upsilon1, upsilon2, upsilon3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
#          prec1, prec2, beta1, gamma1, gamma2, phi1, rho1, chi1, lambda_b1, zeta1, iota
lower <- c(1,     1,     0.1,   0,      0,      0,    0,    0,     0,         0,     0)
upper <- c(20,    15,    0.8,   0.5,    0.5,    1,    1,    1,     5,         5,     10)
length(lower) + length(Pfix)
Sel = c(1, 1,  1, 0, 0,   1, 1, 0,  1, 0, 0,   1, 0, 0,  1, 0, 0,  1, 0, 0,  0, 0, 0,   1, 0, 0, 0, 0, 0,   1, 0, 0,  1, 0, 0,  1, 0, 0)
# For the fixed parameters (P[Sel == 0], what value should parameter be fixed at? NA will be treated as "same as unrelated condition")
beta2 <- NA
beta3 <- NA
gamma3 <- NA
# intrusion weights
phi2 <- NA
phi3 <- NA
rho2 <- NA
rho3 <- NA
chi2 <- NA
chi3 <- NA
psi2 <- NA
psi3 <- NA
# intrusion similarity decays
tau1 <- 0.5 # Temporal asymmetry (tau >0.5 means forwards are more similar)
tau2 <- NA
tau3 <- NA
lambda_f1 <- NA
lambda_b2 <- NA # Similarity decay of backwards temporal lag
lambda_f2 <- NA # Similarity decay of forwards temporal lag
lambda_b3 <- NA # Similarity decay of backwards temporal lag
lambda_f3 <- NA # Similarity decay of forwards temporal lag
zeta2 <- NA
zeta3 <- NA
iota2 <- NA # Decay for orthography orthographic
iota3 <- NA
upsilon2 <- NA # Decay for semantic orth
upsilon3 <- NA
Pfix = c(beta2, beta3, gamma3, phi2, phi3, rho2, rho3,
chi2, chi3, psi2, psi3, tau1, tau2, tau3,
lambda_f1, lambda_b2, lambda_f2, lambda_b3, lambda_f3,
zeta2, zeta3, iota2, iota3, upsilon2, upsilon3)
# Boundaries for estimated parameters. DEoptim will sample uniformly between these bounds
#          prec1, prec2, beta1, gamma1, gamma2, phi1, rho1, chi1, psi,   lambda_b1, zeta1, iota,  upsilon
lower <- c(1,     1,     0.1,   0,      0,      0,    0,    0,    0,      0,         0,     0,     0)
upper <- c(20,    15,    0.8,   0.5,    0.5,    1,    1,    1,    1,      10,        10,    10,    10)
length(lower) + length(Pfix)
sum(Sel)
setwd("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code")
source('x1_flat_intrusion.R')
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/x1_flat_intrusion.R")
