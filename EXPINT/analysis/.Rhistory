P <- P1
sim_data <- simulate_intrusion_cond_model_x(99, data, P, 'test')
recentered_sim_data <- recenter.model2(sim_data)
View(recentered_sim_data)
hist(recentered_sim_data$offset)
hist(recentered_sim_data$offset, bins = 50)
hist(recentered_sim_data$offset, break = 50)
hist(recentered_sim_data$offset, breaks = 50)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/plot_simulation.R")
plot.orthographic.recenter(recentered_sim_data)
plot.orthographic.recenter <- function(model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_sim_data)
plot.orthographic.recenter <- function(model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'res', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.semantic.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'semantic'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin)  +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.spatial.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model, aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1, common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Spatial Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.temporal.recenter <- function(model){
model$abs_lag <- abs(model$lag)
model <- model[model$abs_lag < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1,  common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Temporal Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.asymm.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1,  common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Asymmetric Temporal Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.orthographic.recenter(recentered_sim_data)
plot.orthographic.recenter <- function(model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.semantic.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'semantic'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin) +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~semantic_bin)  +
ggtitle(sprintf('%s Condition, Recentered on semantic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.spatial.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model, aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~spatial_bin) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1, common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Spatial Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.temporal.recenter <- function(model){
model$abs_lag <- abs(model$lag)
model <- model[model$abs_lag < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1,  common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Temporal Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.asymm.recenter <- function(model){
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.3) +
facet_grid(~lag) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1,  common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Asymmetric Temporal Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.orthographic.recenter(recentered_sim_data)
load("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/recentered_data.RData")
View(recentered_data)
View(recentered_sim_data)
plot.orthographic.recenter <- function(data, model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_data, recentered_sim_data)
plot.orthographic.recenter <- function(data, model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model,
aes(x = offset, y = ..density..), colour = 1, fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_data, recentered_sim_data)
plot.orthographic.recenter <- function(data, model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'black', bins = 50) +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'black', bins = 50) +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'black', bins = 50) +
geom_histogram(data = model,
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.1) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_data, recentered_sim_data)
plot.orthographic.recenter <- function(data, model){
model <- model[model$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model,
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_data, recentered_sim_data)
View(recentered_data)
plot.orthographic.recenter <- function(data, model){
model <- model[model$orthographic < 5,]
data <- data[data$orthographic < 5,]
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'orth'))
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic) +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'unrelated'))
p3 <- ggplot() +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model,
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.5) +
facet_grid(~orthographic)  +
ggtitle(sprintf('%s Condition, Recentered on orthographic', 'overall'))
plot <- ggarrange(p1, p2, p3, ncol = 1, nrow = 3, heights = c(1, 1, 1))
return(plot)
}
plot.orthographic.recenter(recentered_data, recentered_sim_data)
source("~/git/sourcemem/EXPINT/analysis/modelling/R/model_code/plot_simulation.R")
plot.orthographic.recenter(recentered_data, recentered_sim_data)
plot.orthographic.recenter(recentered_data, recentered_sim_data)
plot.temporal.recenter()
plot.temporal.recenter(recentered_data, recentered_sim_data)
View(recentered_sim_data)
View(recentered_data)
plot.temporal.recenter <- function(data, model){
data$abs_lag <- abs(data$lag)
model$abs_lag <- abs(model$lag)
model <- model[model$abs_lag < 7,]
p1 <- ggplot() +
geom_histogram(data = data[data$cond == 'orthographic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'orthographic', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('orthographic')
p2 <- ggplot() +
geom_histogram(data = data[data$cond == 'semantic', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'semantic', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('semantic')
p3 <- ggplot() +
geom_histogram(data = data[data$cond == 'unrelated', ],
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model[model$cond == 'unrelated', ],
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('unrelated')
p4 <- ggplot() +
geom_histogram(data = data,
aes(x = offset, y = ..density..), colour = 1, fill = 'white', bins = 50) +
geom_histogram(data = model,
aes(x = offset, y = ..density..), fill = 'red', bins = 50, alpha = 0.2) +
ylim(0, 0.3) +
facet_grid(~abs_lag) +
ggtitle('overall')
plot <- ggarrange(p1,p2,p3,p4, ncol = 1,  common.legend = TRUE, legend="bottom")
plot <- annotate_figure(plot, top = text_grob("Temporal Recenter",
color = "black", face = "bold", size = 16))
return(plot)
}
plot.temporal.recenter(recentered_data, recentered_sim_data)
